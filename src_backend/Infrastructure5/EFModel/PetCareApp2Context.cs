// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Infrastructure5.EFModel
{
    public partial class PetCareApp2Context : DbContext
    {
        public PetCareApp2Context()
        {
        }

        public PetCareApp2Context(DbContextOptions<PetCareApp2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<AdListing> AdListing { get; set; }
        public virtual DbSet<Adress> Adress { get; set; }
        public virtual DbSet<HasPet> HasPet { get; set; }
        public virtual DbSet<Person> Person { get; set; }
        public virtual DbSet<PersonRole> PersonRole { get; set; }
        public virtual DbSet<Pet> Pet { get; set; }
        public virtual DbSet<Role> Role { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AdListing>(entity =>
            {
                entity.Property(e => e.AdlistingId).ValueGeneratedNever();

                entity.Property(e => e.AdlistingDescription).IsUnicode(false);

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("endDate");

                entity.Property(e => e.IdAdress).HasColumnName("idAdress");

                entity.Property(e => e.IsActive).HasColumnName("isActive");

                entity.Property(e => e.PetId).HasColumnName("petId");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("startDate");

                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdAdressNavigation)
                    .WithMany(p => p.AdListing)
                    .HasForeignKey(d => d.IdAdress)
                    .HasConstraintName("FK_AdListing_Adress");

                entity.HasOne(d => d.Pet)
                    .WithMany(p => p.AdListing)
                    .HasForeignKey(d => d.PetId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AdListing_Pet");
            });

            modelBuilder.Entity<Adress>(entity =>
            {
                entity.Property(e => e.AdressId).ValueGeneratedNever();

                entity.Property(e => e.Adress1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Adress");

                entity.Property(e => e.City)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<HasPet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hasPet");

                entity.Property(e => e.PersonId).HasColumnName("personId");

                entity.Property(e => e.PetId).HasColumnName("petId");
            });

            modelBuilder.Entity<Person>(entity =>
            {
                entity.Property(e => e.PersonId).ValueGeneratedNever();

                entity.Property(e => e.Oib)
                    .IsRequired()
                    .HasMaxLength(11)
                    .HasColumnName("OIB")
                    .IsFixedLength();

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PersonEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PersonFirstName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PersonLastName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PersonMobile)
                    .HasMaxLength(13)
                    .IsFixedLength();

                entity.Property(e => e.SessionId).IsUnicode(false);

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PersonRole>(entity =>
            {
                entity.HasKey(e => e.PersonId);

                entity.Property(e => e.PersonId).ValueGeneratedNever();

                entity.Property(e => e.AssigmentDate).HasColumnType("datetime");

                entity.HasOne(d => d.Adlisting)
                    .WithMany(p => p.PersonRole)
                    .HasForeignKey(d => d.AdlistingId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PersonRole_AdListing");

                entity.HasOne(d => d.Person)
                    .WithOne(p => p.PersonRole)
                    .HasForeignKey<PersonRole>(d => d.PersonId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PersonRole_Person");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.PersonRole)
                    .HasForeignKey(d => d.RoleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PersonRole_Role");
            });

            modelBuilder.Entity<Pet>(entity =>
            {
                entity.Property(e => e.PetId)
                    .ValueGeneratedNever()
                    .HasColumnName("petId");

                entity.Property(e => e.Breed)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PetName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("petName");

                entity.Property(e => e.PetType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Size)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Role>(entity =>
            {
                entity.Property(e => e.RoleId).ValueGeneratedNever();

                entity.Property(e => e.RoleName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}